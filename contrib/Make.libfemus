##################
# compile libfemus and also its applications

# It is reasonably assumed that we use the SAME PETSC both for libmesh and for us directly
# Of course it's also assumed that we use the SAME MPI, and SAME HDF5


################################################
# COMPILER and other basic stuff
################################################
#support for math and informatic stuff
fm-enable-complex  = no
fm-enable-shared := yes


FEMUS_CXX      = mpicxx
# $(libmesh_CXX)            # # AUTOCONF 
FEMUS_CPPFLAGS ?= $(CPPFLAGS)
FEMUS_CXXFLAGS ?= $(CXXFLAGS)
#linker options
FEMUS_LDFLAGS  =
#dynamic linking
FEMUS_DLFLAGS  =
FEMUS_RPATHFLAG = -Wl,-rpath,
# $(libmesh_RPATHFLAG)      # # AUTOCONF 
FM_SHAREDFLAG  = -shared
# $(libmesh_CXXSHAREDFLAG)  # # AUTOCONF 
FM_HOSTTYPE    = x86_64-unknown-linux-gnu
# $(hosttype)               # # AUTOCONF 
FM_OBJ_SUFFIX  = $(FM_FEMUS_METHOD).o
#$(obj-suffix)
# $(obj-suffix)             # # AUTOCONF
FM_PERL        = /usr/bin/perl
# $(perl)                   # # AUTOCONF
FM_SRCEXT=.cpp
FM_INCLUDEEXT=.hpp  #maybe not needed
FM_SHARED_LIBEXT := .so

# must be initialized here for pro mode
FEMUS_LIBS :=
################################################


#############################################################################
#### FM_FEMUS_METHOD-based PreProc and Compiler flags #######
#############################################################################
ifeq ($(FM_FEMUS_METHOD),opt)
  FEMUS_CPPFLAGS += -DNDEBUG
  FEMUS_CXXFLAGS +=  -O2 -felide-constructors -fPIC -funroll-loops -fstrict-aliasing -Wdisabled-optimization
  FEMUS_CFLAGS   += -O2 -fPIC -funroll-loops -fstrict-aliasing

endif
ifeq ($(FM_FEMUS_METHOD),dbg)
  FEMUS_CPPFLAGS += -DDEBUG
  FEMUS_CXXFLAGS +=  -O0 -felide-constructors -g -ansi -pedantic -W -Wall -Wno-long-long -Wunused -Wpointer-arith -Wformat -Wparentheses -fPIC -Woverloaded-virtual -D_GLIBCXX_DEBUG -D_GLIBCXX_DEBUG_PEDANTIC
  FEMUS_CFLAGS   += -g  -Wimplicit -fPIC
endif
ifeq ($(FM_FEMUS_METHOD),pro)
  FEMUS_CPPFLAGS += -DNDEBUG
  FEMUS_CXXFLAGS +=  -O2 -felide-constructors -fPIC -funroll-loops -fstrict-aliasing -Wdisabled-optimization -pg
  FEMUS_CFLAGS   += -O2 -fPIC -funroll-loops -fstrict-aliasing -pg 
  FEMUS_LIBS += -pg
# TODO also in the linking command?
  fm-enable-shared = no
endif





#############################################################################
#### FEMuS Library #######
#############################################################################
# we initialize the includes and libs
FEMUS_INCLUDE := -I$(FEMUS_DIR)/include/
FEMUS_INCLUDE += -I.
# see if it compiles...
FEMUS_INCLUDE += -I$(FEMUS_DIR)/../binary/config/
FEMUS_INCLUDE += -I$(FEMUS_DIR)/ExternalLibraries/b64-1.4.2/include/
FEMUS_LIBS    += -L
FEMUS_LIBS    += -l
# FEMUS_LIBS := must do it before
##################



#############################################################################
# SWITCH of the LIBRARIES (mainly for linear algebra packages)
#############################################################################

ifeq ($(fm-enable-petsc),yes)
  FEMUS_CPPFLAGS += -DFEMUS_HAVE_PETSC
  FEMUS_CPPFLAGS += -DFEMUS_DETECTED_PETSC_VERSION_MAJOR=$(FM_PETSCV_MAJOR)
  FEMUS_CPPFLAGS += -DFEMUS_DETECTED_PETSC_VERSION_MINOR=$(FM_PETSCV_MINOR)
  FEMUS_CPPFLAGS += -DFEMUS_DETECTED_PETSC_VERSION_SUBMINOR=$(FM_PETSCV_SUBMINOR)
endif

ifeq ($(fm-enable-mpi),yes)
  FEMUS_CPPFLAGS  += -DHAVE_MPI
endif

ifeq ($(fm-enable-hdf5),yes)

endif

ifeq ($(fm-enable-libmesh),yes)

endif
####################################
###################################





#############################################################################
#### HDF5 ##########
#############################################################################
ifeq ($(fm-enable-hdf5),yes)

FM_HDF5_DIR     := $(FM_BASEPATH_TO_HDF5)/$(FM_HDF5_FOLDER)
FM_HDF5_INC     := $(FM_HDF5_DIR)/$(FM_HDF5_INCLUDE)
FM_HDF5_LIB     := $(FM_HDF5_DIR)/$(FM_HDF5_LIB)
HDF5_LIBNAME     =hdf5
HDF5_SZ_LIBNAME  =sz

FEMUS_INCLUDE += -I$(FM_HDF5_INC)
FEMUS_DLFLAGS += $(FEMUS_RPATHFLAG)$(FM_HDF5_LIB)
FEMUS_LIBS    += -L$(FM_HDF5_LIB)
FEMUS_LIBS    += -l$(HDF5_LIBNAME) 
FEMUS_LIBS    += -l$(HDF5_SZ_LIBNAME)

endif
###################

#############################################################################
##### PETSC ########
#############################################################################
# configure only if libmesh is configured, otherwise pick the libmesh configuration
#this means that we must use the same PETSC for LIBFEMUS and LIBMESH
# or better: if libfemus is alone we can use any petsc
# if femus is with libmesh, you must use the petsc used by libmesh
# this is absolutely acceptable

#This is the way WE configure petsc, regardless of what libmesh does.
# if libmesh is installed without petsc and without laspack, can we still snoop MPI from PETSC ?
# no we cant... we must give it explicitly
#what MPI was PETSC built with?

  # Petsc
  ifeq ($(fm-enable-petsc),yes)


   fm-petsc-version = $(FM_PETSCV_MAJOR).$(FM_PETSCV_MINOR).$(FM_PETSCV_SUBMINOR)
   fm-petsc-major = $(FM_PETSCV_MAJOR)
   fm-petsc-major-minor = $(FM_PETSCV_MAJOR).$(FM_PETSCV_MINOR).x

    # define BOPT first since it may be used in the packages file
    ifeq ($(fm-enable-complex),yes)
      FEMUS_CPPFLAGS     += -DPETSC_USE_COMPLEX
      PETSC_BOPT.g = g_complex
      PETSC_BOPT.o = O_complex
    else
      PETSC_BOPT.g = g
      PETSC_BOPT.o = O
    endif


    ifeq ($(FM_FEMUS_METHOD),dbg)     #     ifeq ($(fm-debug-mode),on)
      BOPT = $(PETSC_BOPT.g)
    else
      BOPT = $(PETSC_BOPT.o)
    endif

    # Depending on petsc version, we include different files
    ifeq ($(fm-petsc-version),2.1.0)
      include $(PETSC_DIR)/bmake/$(PETSC_ARCH)/base.site # 2.1.0 style
    else
      C_CLINKER_SLFLAG = $(FEMUS_RPATHFLAG)  # necessary for PETSc >= 2.1.6
      ifeq ($(fm-petsc-major),3)  # 3.0.x & newer style
        include $(PETSC_DIR)/conf/variables
      else
        include $(PETSC_DIR)/bmake/common/variables  # 2.1.1 or later style
      endif      
    endif

#     # As of PETSc 2.1.x we can extract the libraries and include paths
#     # from the PETSc make file
#     LIBS    += `$(MAKE) -C $(PETSC_DIR) BOPT=$(BOPT) getlinklibs`
#     INCLUDE += `$(MAKE) -C $(PETSC_DIR) BOPT=$(BOPT) getincludedirs`

    #                    (needed by all petsc)  (needed by versions <= 2.3.3)      (needed by versions >= 3.0.0)
    FEMUS_INCLUDE += -I$(PETSC_DIR)/include -I$(PETSC_DIR)/bmake/$(PETSC_ARCH) -I$(PETSC_DIR)/$(PETSC_ARCH)/include \
                         $(BLOCKSOLVE_INCLUDE) $(HYPRE_INCLUDE) $(PACKAGES_INCLUDES)

    # Depending on petsc version, libs live in different locations
    ifeq ($(fm-petsc-major-minor),2.3.x) # 2.3.x does not use BOPT, has lib/ARCH/...
      PETSC_LIB = $(PETSC_DIR)/lib/$(PETSC_ARCH)
    else
      ifeq ($(fm-petsc-major),3) # 3.0.x & newer does not use BOPT, has ARCH/lib/...
        PETSC_LIB = $(PETSC_DIR)/$(PETSC_ARCH)/lib
      else # old-schol lib/lib$BOPT/ARCH format
        PETSC_LIB = $(PETSC_DIR)/lib/lib$(BOPT)/$(PETSC_ARCH)
      endif
    endif

    ifeq ($(fm-enable-shared),yes)
     FEMUS_CPPFLAGS     += -DPETSC_USE_DYNAMIC_LIBRARIES
     FEMUS_DLFLAGS      += $(FEMUS_RPATHFLAG)$(PETSC_LIB)
    endif

    # Get required PETSc link options from their variables
    FEMUS_LIBS += $(PETSC_SNES_LIB)

  endif #end ifeq ($(enable-petsc),yes)
#######################


#############################################################################
######### LIBMESH #######################################
#############################################################################

ifeq ($(fm-enable-libmesh),yes)

FM_LM_DIR := $(FM_BASEPATH_TO_LM)/$(FM_LM_FOLDER)/

libmesh_INCLUDE  := $(shell ${FM_LM_DIR}/bin/libmesh-config --include)
libmesh_CPPFLAGS := $(shell ${FM_LM_DIR}/bin/libmesh-config --cppflags)
libmesh_LIBS     := $(shell ${FM_LM_DIR}/bin/libmesh-config --libs)

FEMUS_CPPFLAGS += $(libmesh_CPPFLAGS)
FEMUS_INCLUDE  += $(libmesh_INCLUDE)
FEMUS_LIBS     += $(libmesh_LIBS)

endif
#############################################################################


###############################################
########### FEMUS COMPILATION #############
#############################################

########## SOURCE FILES and OBJECTS #############
FM_SRCFILES 	:= $(wildcard $(FEMUS_DIR)/src/*$(FM_SRCEXT))
FM_OBJECTS      := $(patsubst %$(FM_SRCEXT), %_$(FM_OBJ_SUFFIX), $(FM_SRCFILES))
FM_LIBRARY_NOEXT:= femus_$(FM_FEMUS_METHOD)
FM_LIBRARY_FILE := lib$(FM_LIBRARY_NOEXT)$(FM_SHARED_LIBEXT)
FM_LIBRARY_DIR  := $(FEMUS_DIR)/lib/
FM_LIBFILE      := $(FM_LIBRARY_DIR)/$(FM_LIBRARY_FILE)
FM_LIBOBJECTS   := $(FM_OBJECTS)

FEMUS_LIBS      += -L$(FM_LIBRARY_DIR)
FEMUS_LIBS      += -l$(FM_LIBRARY_NOEXT)
FEMUS_DLFLAGS   += $(FEMUS_RPATHFLAG)$(FM_LIBRARY_DIR)


##### ADD the FLAGS for LINKING of the EXECUTABLES ########
##### the femus_libs variable is used only in conjunction with the linker flags
FEMUS_LIBS    += $(FEMUS_DLFLAGS) $(FEMUS_LDFLAGS)



libfemus : $(FM_LIBFILE)

$(FM_LIBFILE)     : $(FM_LIBOBJECTS)
	@$(shell mkdir -p $(FM_LIBRARY_DIR))
	@echo "Linking the libfemus library..."$@
	$(FEMUS_CXX) $(FM_SHAREDFLAG) -o $@ $(FM_LIBOBJECTS) $(FEMUS_LDFLAGS)



# include the dependency list
# i called it like that to distinguish from the .depend in the applications
include .dependlib


# Dependencies

.dependlib:
	@$(FM_PERL) $(FEMUS_DIR)/contrib/make_dependencies.pl \
	$(FEMUS_INCLUDE) "-S\$$(FM_OBJ_SUFFIX)" \
	$(FM_SRCFILES) > .dependlib
	@echo "Updated .dependlib"


#################################################
########### END LIBRARY COMPILATION #############
#################################################


###############################################
########### FEMUS COMPILE RULES #############
#############################################

%_$(FM_OBJ_SUFFIX) : %$(FM_SRCEXT)
	@echo "FEMUS - Compiling C++ (in "$(FM_FEMUS_METHOD)" mode) "$<"..."
	$(FEMUS_CXX) $(FEMUS_CPPFLAGS) $(FEMUS_CXXFLAGS)  $(FEMUS_INCLUDE)  -c $< -o $@

###############################################
########### END COMPILE RULES #############
#############################################


cleanlib : 
	rm $(FM_LIBFILE) $(FM_LIBOBJECTS) 